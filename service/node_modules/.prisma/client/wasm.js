
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.9.1
 * Query Engine version: 23fdc5965b1e05fc54e5f26ed3de66776b93de64
 */
Prisma.prismaVersion = {
  client: "5.9.1",
  engine: "23fdc5965b1e05fc54e5f26ed3de66776b93de64"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  password: 'password',
  email: 'email',
  role: 'role'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  userId: 'userId'
};

exports.Prisma.StudentScalarFieldEnum = {
  id: 'id',
  promotion: 'promotion',
  userId: 'userId',
  internshipId: 'internshipId',
  academicTutorId: 'academicTutorId',
  enterpriseTutorId: 'enterpriseTutorId'
};

exports.Prisma.TutorScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.AcademicTutorScalarFieldEnum = {
  id: 'id',
  tutorId: 'tutorId'
};

exports.Prisma.EnterpriseTutorScalarFieldEnum = {
  id: 'id',
  tutorId: 'tutorId'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.InternshipScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  startDate: 'startDate',
  endDate: 'endDate',
  salary: 'salary',
  companyId: 'companyId',
  tutorId: 'tutorId'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  fileName: 'fileName',
  filePath: 'filePath',
  fileType: 'fileType',
  fileSize: 'fileSize',
  documentType: 'documentType',
  internshipId: 'internshipId'
};

exports.Prisma.CdCScalarFieldEnum = {
  id: 'id',
  file: 'file',
  documentId: 'documentId'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  file: 'file',
  documentId: 'documentId'
};

exports.Prisma.EvaluationScalarFieldEnum = {
  id: 'id',
  evaluation: 'evaluation',
  submissionDate: 'submissionDate',
  factor: 'factor',
  internshipId: 'internshipId',
  studentId: 'studentId'
};

exports.Prisma.StudentEvaluationScalarFieldEnum = {
  id: 'id',
  evaluationId: 'evaluationId'
};

exports.Prisma.CompanyEvaluationScalarFieldEnum = {
  id: 'id',
  evaluationId: 'evaluationId'
};

exports.Prisma.SoutenanceScalarFieldEnum = {
  id: 'id',
  date: 'date',
  status: 'status'
};

exports.Prisma.SoutenanceEvaluationScalarFieldEnum = {
  id: 'id',
  soutenanceId: 'soutenanceId'
};

exports.Prisma.ReportEvaluationScalarFieldEnum = {
  id: 'id',
  reportEvalId: 'reportEvalId',
  evaluationId: 'evaluationId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Admin: 'Admin',
  Student: 'Student',
  Tutor: 'Tutor',
  AcademicTutor: 'AcademicTutor',
  EnterpriseTutor: 'EnterpriseTutor',
  Company: 'Company',
  Internship: 'Internship',
  Document: 'Document',
  CdC: 'CdC',
  Report: 'Report',
  Evaluation: 'Evaluation',
  StudentEvaluation: 'StudentEvaluation',
  CompanyEvaluation: 'CompanyEvaluation',
  Soutenance: 'Soutenance',
  SoutenanceEvaluation: 'SoutenanceEvaluation',
  ReportEvaluation: 'ReportEvaluation'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions or Edge Middleware',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
